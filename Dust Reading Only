import spidev

# Create an instance of the SPI device
spi = spidev.SpiDev()
spi.open(0, 0)  # Open SPI bus 0, device 0
spi.max_speed_hz = 1000000  # Set SPI speed (optional)

# Function to read ADC value from MCP3008
def read_adc(channel):
    # MCP3008 operates in single-ended mode, so use channel number from 0 to 7
    assert 0 <= channel <= 7, 'ADC channel must be 0-7'
    # Create SPI message
    msg = [1, (8 + channel) << 4, 0]
    # Transfer SPI message and receive response
    response = spi.xfer2(msg)
    # Extract ADC value from response
    value = ((response[1] & 3) << 8) + response[2]
    return value

# Read analog values from the MCP3008
while True:
    raw_value = read_adc(0)  # Read analog value from channel 0
    # Perform any necessary calibration or processing on raw_value
    # Use the calibrated value to determine the dust readings

    # Print the raw value for demonstration
    print("Raw Value:", raw_value)

# Cleanup SPI
spi.close()
